# This makefile is for Borland make (IBM PC/80386+)

#		*Translator Definitions*
# Comment this next line out to generate the 68k compiler
# leave it in to generate the 386 compiler
#i386 = -Di386

CC = ccn /S
ASM = nasm -fobj
LIB = xlib
LINK = \tools\bin\win32\valx /DEBUG
SOURCE = ..\source

.c.obj:
  $(CC) $< 
  @$(ASM) $*.asm
#		*List Macros*
#asmsubs.obj \

EXE_dependencies = \
asmsubs.obj \
cv.obj \
def.obj \
dictary.obj \
endlink.obj \
execfile.obj \
files.obj \
fixup.obj \
globals.obj \
initlink.obj \
library.obj \
linkerio.obj \
list.obj \
lx.obj \
main.obj \
map.obj \
memory.obj \
object.obj \
order.obj \
pe.obj \
resource.obj \
srchpath.obj \
string.obj \
timer.obj \
tmodule.obj \
token.obj \
unmangle.obj \
userinp.obj \

#		*Explicit Rules*
valx.exe: upbuild $(EXE_dependencies) valx.res
  del valx.exe
  $(LINK) -detaillevel:2 -nci -pe -use32 -map -con @&&|
c0xwin.obj $(EXE_dependencies),valx.exe,valx.map,clwin.lib climp.lib,valx.res,
|
q.exe: $(EXE_dependencies)
  $(LINK) /DE:1 -nci -use32 -pe -map -con -detaillevel:5 -exechecksum @&&|
c0xwin.obj $(EXE_dependencies),q.exe,q.map,climp.lib clwin.lib,ccide.res,
|
valx.res: valx.rc
  xrc -r valx.rc
upbuild:
        ..\upbuild $(FULLBUILD) VALX

initlink.c: ..\version.h

profile.obj: profile.c
	cc386 -C+N profile
	NASM -fobj profile.asm